#include <unistd.h>
#include <stdlib.h>
#include <sys/wait.h>
#include <stdio.h>
#include <sys/types.h>
int
main(int argc, char ** argv)
{
    int p1[2];
    int p2[2];
    pipe(p1);
    pipe(p2);
    int pid1 = fork();
    int n;
    sscanf(argv[1], "%d", &n);
    if(!pid1) {
        close(p1[0]);
        close(p2[1]);
        FILE *f = fdopen(p1[1], "w");
        FILE *g = fdopen(p2[0], "r");
        int k = 0;
        while(1) {
            k++;
            if(k >= n) {
                close(p2[0]);
                close(p1[1]);
                return 0;
            }
            fprintf(f, "%d\n", k);
            fflush(f);
            printf("1 %d\n", k);
            fflush(stdout);
            if(!fscanf(g, "%d", &k)) {
                close(p2[0]);
                close(p1[1]);
                return 0;
            }
        }
    }
    int pid2 = fork();
    if(!pid2) {
        close(p1[1]);
        close(p2[0]);
        FILE *f = fdopen(p2[1], "w");
        FILE *g = fdopen(p1[0], "r");
        int k = 0;
        while(1) {
            if(!fscanf(g, "%d", &k)) {
                close(p2[0]);
                close(p1[1]);
                return 0;
            }
            k++;
            if(k >= n) {
                close(p2[0]);
                close(p1[1]);
                return 0;
            }
            printf("2 %d\n", k);
            fflush(stdout);
            fprintf(f, "%d\n", k);
            fflush(f);
        }
    }
    close(p1[0]);
    close(p1[1]);
    close(p2[0]);
    close(p2[1]);
    wait(NULL);
    wait(NULL);
    printf("Done\n");
    return 0;
}