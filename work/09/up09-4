#include <signal.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
int cnt, target, maxval, st, pid2 = -1, fd[2];
void
shand(int s)
{
    signal(SIGUSR1, shand);
    read(fd[0], &cnt, sizeof(int));
    if (cnt < maxval) {
        if(cnt != 0){
        if (pid2 != getpid()) {
            printf("1 ");
            fflush(stdout);
        } else {
            printf("2 ");
            fflush(stdout);
        }
        printf("%d\n", cnt);
        fflush(stdout);}
        cnt++;
        write(fd[1], &cnt, sizeof(int));
        kill(target, SIGUSR1);
    } else {
        close(fd[1]);
        close(fd[0]);
        kill(target, SIGKILL);
        exit(0);
    }
}
int
main(int argc, char **argv)
{
    pipe(fd);
    sscanf(argv[1], "%d", &maxval);
    signal(SIGUSR1, shand);
    int pid1;
    if (!(pid1 = fork())){
        cnt = 0;
        read(fd[0], &target, sizeof(target));
        write(fd[1], &cnt, sizeof(int));
        kill(target, SIGUSR1);
        while (1) {
            pause();
        }
    }
    if(!(pid2 = fork())){
        target = pid1;
        pid2 = getpid(); 
        write(fd[1], &pid2, sizeof(int));
        while(1) {
            pause();
        }
    }
    while (wait(&st) == -1);
    while (wait(&st) == -1);
    close(fd[1]);
    close(fd[0]);
    printf("Done");
    fflush(stdout);
    return 0;
}