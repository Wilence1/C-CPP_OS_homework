#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>
#include <ctype.h>
#include <math.h>
#include <limits.h>
enum {SIZE = PATH_MAX};
void
exe(char *com)
{
    if(!fork()) {
        execlp(com, com, NULL);
        exit(1);
    }
}
char str[SIZE];
char *
go(char *path)
{
    FILE *f = fopen(path, "r");
    fgets(str, sizeof(str), f);
    int len = strlen(str);
    if (str[len - 1] == '\n') {
        str[len - 1] = '\0';
    }
    fclose(f);
    return str;
}
int min(int a, int b)
{
    return a < b ? a : b;
}
int
main(int argc, char **argv)
{
    int n;
    sscanf(argv[1], "%d", &n);
    int count = 0;
    for(int i = 0; i < min(n, argc - 2); i++) {
        exe(go(argv[i + 2]));
    }
    for(int i = 0; i < min(n, argc - 2); i++) {
        int st;
        wait(&st);
        if (WIFEXITED(st) && !WEXITSTATUS(st)) {
            count++;
        }
    }
    for(int i = n + 2; i < argc; i++) {
        strcpy(str, go(argv[i]));
        if(!fork()) {
            execlp(str, str, NULL);
            exit(1);
        } else {
            int st;
            wait(&st);
            if(WIFEXITED(st) && !WEXITSTATUS(st)) {
                count++;
            }
        }
    }
    printf("%d\n", count);
    fflush(stdout);
}